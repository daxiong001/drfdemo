"""
Django settings for rsd project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.


BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-apse!6j@$duk#_u05t)d1r57psbnyy9-k95%rd!h#hi&$t)51b'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django_filters",
    'rest_framework',
    'restful',
    'sers',
    "school",
    "drfdemo",
    "demo",
    "opt",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'rsd.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rsd.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'homework',
        'USER': 'root',
        'PASSWORD': 'daixiongkun123',
        'HOST': '127.0.0.1',
        'PORT': 3306,
        'OPTIONS': {'isolation_level': None}
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.db.backends': {
            'handlers': ['console'],
            'level': 'DEBUG' if DEBUG else 'INFO',
        },
    },
}

"""drf配置信息"""
REST_FRAMEWORK = {
    #   配置认证方式的选项,全局配置
    # 'DEFAULT_AUTHENTICATION_CLASS': (
    #     # 'rest_framework.authentication.SessionAuthentication',  # session认证
    #     'rest_framework.authentication.BasicAuthentication',  # 基本认证
    #     'rsd.authentication.CustomerAuthentication',  # 自定义认证
    # ),
    # #   权限全局配置,视图中可以通过permission_classes进行局部配置，局部配置优先级高于全局配置
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     # 设置所有视图只能被已经登陆认证过的用户访问
    #     'rest_framework.permissions.IsAuthenticated'
    # ],

    #   限流全局配置
    # 'DEFAULT_THROTTLE_CLASSES': [# 限流配置
    #     'rest_framework.throttling.AnonRateThrottle',  # 未认证用户【未登录用户】
    #     'rest_framework.throttling.UserRateThrottle',  # 已认证用户【已登陆用户】
    # ],
    # 限流频率配置
    # 'DEFAULT_THROTTLE_RATES': {  # 频率配置
    #     'anon': '2/day',  # 针对游客的访问频率进行限制
    #     'user': '5/day',  # 针对登录用户的访问频率进行限制
    # },

    #   过滤查询，排序全局配置,共用一个配置项，所以排序和过滤要一起使用，则必须整个项目，要么一起全局配置，要么一起局部配置
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',  # 过滤器
        'rest_framework.filters.OrderingFilter'  # 排序配置
    ),

    # 'DEFAULT_PAGINATION_CLASS':
    #   页码分页器，?page=页码&page-size=单页数据量
    # 'rest_framework.pagination.PageNumberPagination',
    # 偏移量分页器，?limit=单页数据量&offset=数据开始下标
    # 'rest_framework.pagination.LimitOffsetPagination',
    # 'PAGE_SIZE': 5
    'EXCEPTION_HANDLER': 'opt.exceptions.exception_handler'

}
